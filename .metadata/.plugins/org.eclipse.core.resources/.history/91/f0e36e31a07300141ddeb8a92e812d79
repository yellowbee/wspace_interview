package com.topcoder.graph;

import java.util.Stack;

/*
 * Filling a closed region in a grid.
 */

public class RegionFill {
	private static class Pair {
		int x;
		int y;
		Pair(int x, int y) {
			this.x = x;
			this.y = y;
		}
	}
	
	// A is the grid; (x, y) is the starting cell to fill
	public static void doFill(int[][] A, int x, int y) {
		boolean[][] filled = new boolean[A.length][A.length];
		for (int i=0; i<A.length; i++) {
			for (int j=0; j<A.length; j++) {
				filled[i][j] = false;;
			}
		}
		
		int area = 0;
		Stack<Pair> stack = new Stack<Pair>();
		stack.push(new Pair(x, y));
		Pair cur = null;
		while (!stack.isEmpty()) {
			cur = stack.pop();
			filled[cur.x][cur.y] = true;
			area++;
			if (cur.x-1 >= 0 && A[cur.x-1][y] != 1 && !filled[cur.x-1][y]) {
				stack.push(new Pair(cur.x-1, cur.y));
			}
		}
	}
}
